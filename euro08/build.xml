<!--
  $Header: /home/xubuntu/berlios_backup/github/tmp-cvs/newsapp/Repository/euro08/build.xml,v 1.3 2007/11/28 13:35:41 newsletter Exp $
-->


<project name="First Example for servlet" default="compile" basedir=".">

  <property file="../build.properties"/>
  <property file="persistence.properties"/>
  <property name="app.name"      value="euro08"/>
  <property name="app.version"   value="1.0"/>
  <property name="build.home"    value="build"/>
  <property name="deploy.home"   value="${catalina.base}/webapps/${app.name}"/>
  <property name="dist.home"     value="dist"/>
  <property name="context.path" value="/${app.name}"/>
  <property name="build"   value="${basedir}/build" />
  <property name="url"      value="http://localhost:8080/manager"/>

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>

  <path id="classpath">
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${jstl.jar}"/>
    <pathelement location="${jsf-api.jar}"/>
    <pathelement location="${standard.jar}"/>
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${build}/WEB-INF/classes"/>

    <!-- Database JDBC - This example shows MySQL -->
    <pathelement location="${mysql-connector-java.jar}"/>

    <!-- Hibernate Jars -->
    <pathelement location="${ant-antlr-1.6.5.jar}"/>
    <pathelement location="${antlr-2.7.6rc1.jar}"/>
    <pathelement location="${asm.jar}"/>
    <pathelement location="${asm-attrs.jar}"/>
    <pathelement location="${cglib-2.1.3.jar}"/>
    <pathelement location="${commons-collections-2.1.1.jar}"/>
    <pathelement location="${commons-logging-1.0.4.jar}"/>
    <pathelement location="${dom4j-1.6.1.jar}"/>
    <pathelement location="${hibernate3.jar}"/>
    <pathelement location="${jta.jar}"/>
    <pathelement location="${log4j-1.2.11.jar}"/>
  </path>

  <path id="compile.classpath">
    <!-- Include all elements that Tomcat exposes to applications -->
    <pathelement location="${catalina.home}/classes"/>
    <fileset dir="${catalina.home}/webapps/${app.name}/WEB-INF/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="all" depends="clean, compile" description="Clean build and dist, then compile"/>

  <target name="makeDirectories">
    <mkdir dir="${build}" />
    <mkdir dir="${build}/${app.name}" />
    <mkdir dir="${build}/classes" />
    <mkdir dir="${build}/classes/${app.name}" />
    <mkdir dir="${build}/${app.name}/WEB-INF/lib" />
    <mkdir dir="${build}/${app.name}/WEB-INF/classes" />
  </target>

  <target name="populateDirectories" depends="makeDirectories">

    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${jstl.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${jsf-api.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${standard.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${jsf-impl.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-beanutils.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-collections.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-digester.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-logging.jar}" />

    <!-- Database JDBC -->
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${mysql-connector-java.jar}" />

    <!-- Hibernate Jars -->
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${ant-antlr-1.6.5.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${antlr-2.7.6rc1.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${asm.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${asm-attrs.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${cglib-2.1.3.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-collections-2.1.1.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${commons-logging-1.0.4.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${dom4j-1.6.1.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${hibernate3.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${jta.jar}" />
    <copy todir="${build}/${app.name}/WEB-INF/lib" file="${log4j-1.2.11.jar}" />


  </target>
	
  <target name="dist" depends="populateDirectories">
    <javac source="1.5" debug="true" srcdir="src" destdir="${build}/${app.name}/WEB-INF/classes">
      <classpath refid="classpath"/>
    </javac>
    <copy todir="${build}/${app.name}">
      <fileset dir="web">
        <include name="**/*.*" />
      </fileset>
    </copy>
    <copy todir="${build}/${app.name}/WEB-INF/classes">
      <fileset dir="${basedir}/src">
        <include name="**/*.xml" />
      </fileset>
    </copy>
    <jar jarfile="${build}/${app.name}.war" basedir="${build}/${app.name}"/>
  </target>
  
  
  <target name="clean" description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

	
  <target name="compile" depends="prepare" description="Compile Java sources">
    <!-- Compile Java classes as necessary -->
    <mkdir    dir="${build.home}/WEB-INF/classes"/>
    <javac srcdir="src" destdir="${build.home}/WEB-INF/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
      <classpath refid="classpath"/>
    </javac>
    <!-- Copy associated resource files -->
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="src" includes="**/*.properties"/>
    </copy>
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="src" includes="**/hibernate.cfg.xml"/>
    </copy>
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="src" includes="**/*.hbm.xml"/>
    </copy>
  </target>

	
  <target name="deploy" depends="compile" description="Deploy application to servlet container">
    <!-- Copy the contents of the build directory -->
    <mkdir dir="${deploy.home}"/>
    <copy todir="${deploy.home}">
      <fileset dir="${build.home}"/>
    </copy>
  </target>

<target name="undeploy"
   description="Delete old deploy directory">
  <delete dir="${deploy.home}"/>
</target>


  <target name="javadoc" depends="compile" description="Create Javadoc API documentation">
    <mkdir dir="${dist.home}/docs/api"/>
    <javadoc sourcepath="src"
                destdir="${dist.home}/docs/api"
           packagenames="*">
      <classpath refid="compile.classpath"/>
    </javadoc>
  </target>

  <target name="prepare">
    <!-- Create build directory and copy static content -->
    <mkdir  dir="${build.home}"/>
    <copy todir="${build.home}">
      <fileset dir="web" />
    </copy>
    <!-- Copy external dependencies as required -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
    <mkdir  dir="${build.home}/WEB-INF/lib"/>
    <copy todir="${build.home}/WEB-INF/lib">
    	<fileset dir="lib" />
    </copy>
  </target>

</project>
